#version 400 core

in vec3 position;
in vec3 normal;
in vec2 textureCoords;

out vec2 pass_textureCoords;
out vec3 normalVector;
out vec3 lightVector;

out vec3 toCameraVector;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 lightPosition;

void main(void)
{
	vec4 gameWorldPosition = transformationMatrix * vec4(position,1.0);
	gl_Position = projectionMatrix * viewMatrix * gameWorldPosition;
	pass_textureCoords = textureCoords * 80.0;
	
	normalVector = (transformationMatrix * vec4(normal,0.0)).xyz;
	lightVector = lightPosition - gameWorldPosition.xyz;
	
	toCameraVector = (inverse(viewMatrix) * vec4(0.0,0.0,0.0,0.1)).xyz - gameWorldPosition.xyz;
}